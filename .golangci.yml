linters-settings:
  errcheck:
    check-type-assertions: true
  forbidigo:
    forbid:
      - '^fmt\.Print'
      - '^log\.'
      - '^print$'
      - '^println$'
      - '^panic$'
      - '^clocktest\.'
      - '^clockwork\.'
  godox:
    # TODO, OPT, etc. comments are fine to commit. Use FIXME comments for
    # temporary hacks, and use godox to prevent committing them.
    keywords: [FIXME, NOCOMMIT]
  varnamelen:
    ignore-decls:
      - T any
      - i int
      - wg sync.WaitGroup
      - ok bool
      - w http.ResponseWriter
      - r *http.Request
linters:
  enable-all: true
  disable:
    - cyclop            # covered by gocyclo
    - depguard          # unnecessary for small libraries
    - exhaustruct       # not helpful, prevents idiomatic struct literals
    - funlen            # rely on code review to limit function length
    - gocognit          # dubious "cognitive overhead" quantification
    - gofumpt           # prefer standard gofmt
    - goimports         # rely on gci instead
    - inamedparam       # convention is not followed
    - ireturn           # "accept interfaces, return structs" isn't ironclad
    - lll               # don't want hard limits for line length
    - maintidx          # covered by gocyclo
    - mnd               # some unnamed constants are okay
    - nlreturn          # generous whitespace violates house style
    - nonamedreturns    # named returns are fine; it's *bare* returns that are bad
    - tenv              # deprecated in golangci v1.64.0
    - testpackage       # internal tests are fine
    - wrapcheck         # don't _always_ need to wrap errors
    - wsl               # generous whitespace violates house style
issues:
  exclude-dirs-use-default: false
  exclude:
    # Don't ban use of fmt.Errorf to create new errors, but the remaining
    # checks from err113 are useful.
    - "do not define dynamic errors.*"
    # This gosec error is noisy with false positives.
    - "G115: integer overflow conversion"
  exclude-rules:
    # Needlessly verbose inside of test-only code.
    - path: (.+)_test\.go
      linters:
        - forcetypeassert
    # Allow dot imports for testing.
    - path: (.+)_test\.go
      text: "^dot-imports: should not use dot imports"
      linters:
        - revive
    # Allow clocktest within tests
    - path: (.+)_test\.go
      text: "^use of `clocktest\\."
      linters:
        - forbidigo
    # Allow clockwork within clocktest
    - path: internal/clocktest
      text: "^use of `clockwork\\."
      linters:
        - forbidigo
    - path: client_test\.go
      linters:
        # These tests examine goroutines to make sure all resources
        # are cleaned up, which doesn't work when run in parallel.
        - paralleltest
        # For some reason, this linter is coming up with several
        # false positives in this file ¯\_(ツ)_/¯
        - bodyclose
